Escaping Literal Quotes in Strings

In JavaScript, you can escape a quote from considering it as an end of string quote by placing a backslash (\) in front of the quote.

const sampleStr = "Alan said, \"Peter is learning JavaScript\".";

Use backslashes to assign a string to the myStr variable so that if you were to print it to the console, you would see:

I am a "double quoted" string inside "double quotes".

Answer is:

const myStr = "I am a \"double quoted\" string inside \"double quotes\"."; // Change this line

Quoting Strings with Single Quotes

const doubleQuoteStr = "This is a string"; 
const singleQuoteStr = 'This is also a string';

Learning good strings and bad strings. "Bad" strings look like this: const badStr = 'Finn responds, "Let's go!"'; and "Good" strings look like: const goodStr = 'Jake asks Finn, "Hey, let\'s go on an adventure?"';

Change the provided string to a string with single quotes at the beginning and end and no escape characters.

const myStr = "<a href=\"http://www.example.com\" target=\"_blank\">Link</a>"; would be:

const myStr = '<a href="http://www.example.com" target="_blank">Link</a>'; (Basically you just removed the excess marks, like the slashes, and swapped the " for '.

